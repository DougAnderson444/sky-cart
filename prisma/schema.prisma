// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id Int @id @default(autoincrement())
  stripeId String
  name String
  packageDimensions Json?
  images String[]
  shippable Boolean?
  unitLabel String?
  url String?

  prices Price[]
  cartItems CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([stripeId])
}

model Price {
  id Int @id @default(autoincrement())

  productId Int
  product Product @relation(fields: [productId], references: [id])

  stripeId String
  type String
  billingScheme String
  currency String
  nickname String?
  recurring Json?
  taxBehavior String
  tiers Json[]
  transformQuantity Json?
  unitAmount Int?
  unitAmountDecimal String?
  customUnitAmount Json?
  default Boolean
  cartItems CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([stripeId])
}

enum CartStatus {
  OPEN
  PAID
}

model Cart {
  id Int @id @default(autoincrement())
  publicId String
  token String
  status CartStatus
  currency String
  total Int

  items CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([publicId])
  @@unique([token])
  @@unique([publicId, token])
}

model CartItem {
  id Int @id @default(autoincrement())

  cartId Int
  cart Cart @relation(fields: [cartId], references: [id])

  productId Int
  product Product @relation(fields: [productId], references: [id])

  priceId Int
  price Price @relation(fields: [priceId], references: [id])

  quantity Int
  subtotal Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([cartId, priceId])
  @@unique([cartId, productId, priceId])
}
